[{"code":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    char str1[200];\r\n    fgets(str1, sizeof(str1), stdin);\r\n\r\n    str1[strcspn(str1, \"\\n\")] = '\\0';\r\n    \r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-01T12:14:00.203Z","isCorrect":false},{"code":"#include <stdio.h>\r\n#include <ctype.h>\r\n\r\nint isPangram(char str[]) \r\n{\r\n    int mark[26] = {0};\r\n    int index;\r\n\r\n    for (int i = 0; str[i] != '\\0'; i++) \r\n    {\r\n        if (isalpha(str[i])) \r\n        {\r\n            index = tolower(str[i]) - 'a';\r\n            mark[index] = 1;\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < 26; i++) \r\n    {\r\n        if (mark[i] == 0)\r\n            return 0;\r\n    }\r\n\r\n    return 1; \r\n}\r\n\r\nint main() \r\n{\r\n    char str[1000];\r\n    fgets(str, sizeof(str), stdin);\r\n    str[strcspn(str, \"\\n\")] = '\\0';\r\n\r\n    if (isPangram(str))\r\n        printf(\"Yes\");\r\n    else\r\n        printf(\"No\");\r\n}\r\n","language":"c","time":"2025-05-01T12:14:58.181Z","isCorrect":false},{"code":"#include <stdio.h>\r\n#include <ctype.h>\r\n\r\nint isPangram(char str[]) \r\n{\r\n    int mark[26] = {0};\r\n    int index;\r\n\r\n    for (int i = 0; str[i] != '\\0'; i++) \r\n    {\r\n        if (isalpha(str[i])) \r\n        {\r\n            index = tolower(str[i]) - 'a';\r\n            mark[index] = 1;\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < 26; i++) \r\n    {\r\n        if (mark[i] == 0)\r\n            return 0;\r\n    }\r\n\r\n    return 1; \r\n}\r\n\r\nint main() \r\n{\r\n    char str[1000];\r\n    fgets(str, sizeof(str), stdin);\r\n    str[strcspn(str, \"\\n\")] = '\\0';\r\n\r\n    if (isPangram(str))\r\n        printf(\"Yes\");\r\n    else\r\n        printf(\"No\");\r\n}\r\n","language":"c","time":"2025-05-19T12:50:53.689Z","isCorrect":false},{"code":"#include <stdio.h>\r\n#include <ctype.h>\r\n#include <string.h>  // Needed for strcspn()\r\n\r\nint isPangram(char str[]) \r\n{\r\n    int mark[26] = {0};\r\n    int index;\r\n\r\n    for (int i = 0; str[i] != '\\0'; i++) \r\n    {\r\n        if (isalpha(str[i])) \r\n        {\r\n            index = tolower(str[i]) - 'a';\r\n            mark[index] = 1;\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < 26; i++) \r\n    {\r\n        if (mark[i] == 0)\r\n            return 0;\r\n    }\r\n\r\n    return 1; \r\n}\r\n\r\nint main() \r\n{\r\n    char str[1000];\r\n    fgets(str, sizeof(str), stdin);\r\n    str[strcspn(str, \"\\n\")] = '\\0'; // Removing trailing newline\r\n\r\n    if (isPangram(str))\r\n        printf(\"Yes\");\r\n    else\r\n        printf(\"No\");\r\n}\r\n","language":"c","time":"2025-05-19T12:52:33.215Z","isCorrect":false},{"code":"#include <stdio.h>\r\n#include <ctype.h>\r\n#include <string.h>  // Needed for strcspn()\r\n\r\nint isPangram(char str[]) \r\n{\r\n    int mark[26] = {0};\r\n    int index;\r\n\r\n    for (int i = 0; str[i] != '\\0'; i++) \r\n    {\r\n        if (isalpha(str[i])) \r\n        {\r\n            index = tolower(str[i]) - 'a';\r\n            mark[index] = 1;\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < 26; i++) \r\n    {\r\n        if (mark[i] == 0)\r\n            return 0;\r\n    }\r\n\r\n    return 1; \r\n}\r\n\r\nint main() \r\n{\r\n    char str[1000];\r\n    fgets(str, sizeof(str), stdin);\r\n    str[strcspn(str, \"\\n\")] = '\\0'; // Removing trailing newline\r\n\r\n    if (isPangram(str))\r\n        printf(\"Yes\");\r\n    else\r\n        printf(\"No\");\r\n}\r\n","language":"c","time":"2025-05-19T12:55:43.936Z","isCorrect":false},{"code":"#include <stdio.h>\r\n#include <ctype.h>\r\n#include <string.h>\r\n\r\nint isPangram(char str[]) \r\n{\r\n    int mark[26] = {0};\r\n    int index;\r\n\r\n    for (int i = 0; str[i] != '\\0'; i++) \r\n    {\r\n        if (isalpha(str[i])) \r\n        {\r\n            index = tolower(str[i]) - 'a';\r\n            mark[index] = 1;\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < 26; i++) \r\n    {\r\n        if (mark[i] == 0)\r\n            return 0;\r\n    }\r\n\r\n    return 1; \r\n}\r\n\r\nint main() \r\n{\r\n    char str[1000];\r\n    if (fgets(str, sizeof(str), stdin) == NULL) {\r\n        printf(\"No\\n\"); // Handle input error or EOF\r\n        return 1;\r\n    }\r\n    str[strcspn(str, \"\\n\")] = '\\0'; // Remove trailing newline\r\n\r\n    if (isPangram(str))\r\n        printf(\"Yes\\n\");\r\n    else\r\n        printf(\"No\\n\");\r\n\r\n    return 0;\r\n}","language":"c","time":"2025-05-19T12:57:23.910Z","isCorrect":false}]