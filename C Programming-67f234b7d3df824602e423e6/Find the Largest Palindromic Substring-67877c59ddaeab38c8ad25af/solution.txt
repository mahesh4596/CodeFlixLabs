[{"code":"#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nchar* longestPalindrome(char* s) \r\n{\r\n    int len = strlen(s);\r\n    if (len < 2) {\r\n        return s;\r\n    }\r\n\r\n    int maxLen = 1;\r\n    int start = 0;\r\n    int low, high;\r\n\r\n    for (int i = 0; i < len; i++) \r\n    {\r\n        low = i - 1;\r\n        high = i;\r\n        while (low >= 0 && high < len && s[low] == s[high]) \r\n        {\r\n            if (high - low + 1 > maxLen) \r\n            {\r\n                start = low;\r\n                maxLen = high - low + 1;\r\n            }\r\n            low--;\r\n            high++;\r\n        }\r\n\r\n        low = i - 1;\r\n        high = i + 1;\r\n        while (low >= 0 && high < len && s[low] == s[high]) \r\n        {\r\n            if (high - low + 1 > maxLen) \r\n            {\r\n                start = low;\r\n                maxLen = high - low + 1;\r\n            }\r\n            low--;\r\n            high++;\r\n        }\r\n    }\r\n\r\n    char* result = (char*)malloc((maxLen + 1) * sizeof(char));\r\n    strncpy(result, s + start, maxLen);\r\n    result[maxLen] = '\\0';\r\n\r\n    return result;\r\n}\r\n\r\nint main() \r\n{\r\n    char s[1000];\r\n    fgets(s, sizeof(s), stdin);\r\n\r\n    int len = strlen(s);\r\n    if (len > 0 && s[len-1] == ' ') \r\n        s[len-1] = '\\0';\r\n\r\n    char* longestPal = longestPalindrome(s);\r\n    printf(\"%s\", longestPal);\r\n    free(longestPal);\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-04-29T12:59:18.295Z","isCorrect":true}]