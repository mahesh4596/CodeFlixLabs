[{"code":"int findUnsortedSubarray(int arr[],int n)\r\n{\r\n    int count = 0;\r\n    for(int r = 0;r < n;r++)\r\n    {\r\n        for(int c = 0;c < n - 1 - r; c++)\r\n        {\r\n            if(arr[c] > arr[c + 1])\r\n                count++;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n","language":"c","time":"2025-04-13T11:03:49.470Z","isCorrect":false},{"code":"int findUnsortedSubarray(int arr[],int n)\r\n{\r\n    int count = 0;\r\n    for(int r = 0;r < n;r++)\r\n    {\r\n        for(int c = 0;c < n - 1 - r; c++)\r\n        {\r\n            if(arr[c] > arr[c + 1])\r\n                count++;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n","language":"c","time":"2025-04-16T13:37:28.175Z","isCorrect":false},{"code":"int findUnsortedSubarray(int arr[], int n) \r\n{\r\n    int start = -1, end = -1;\r\n    for (int i = 0; i < n - 1; i++) \r\n    {\r\n        if (arr[i] > arr[i + 1]) \r\n        {\r\n            start = i;\r\n            break;\r\n        }\r\n    }\r\n    \r\n    for (int i = n - 1; i > 0; i--)\r\n    {\r\n        if (arr[i] < arr[i - 1]) \r\n        {\r\n            end = i;\r\n            break;\r\n        }\r\n    }\r\n    return end - start + 1;\r\n}","language":"c","time":"2025-04-16T13:40:30.900Z","isCorrect":false},{"code":"int findUnsortedSubarray(int arr[], int n) \r\n{\r\n    int start = -1, end = -1;\r\n    for (int i = 0; i < n - 1; i++) \r\n    {\r\n        if (arr[i] > arr[i + 1]) \r\n        {\r\n            start = i;\r\n            break;\r\n        }\r\n    }\r\n    \r\n    if (start == -1) return 0;\r\n\r\n    for (int i = n - 1; i > 0; i--)\r\n    {\r\n        if (arr[i] < arr[i - 1]) \r\n        {\r\n            end = i;\r\n            break;\r\n        }\r\n    }\r\n    return end - start + 1;\r\n}","language":"c","time":"2025-04-16T13:41:12.163Z","isCorrect":false}]